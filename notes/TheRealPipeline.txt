
Alphabet Soup

IA - input assembler. reads index and vertex data
VS - vertex shader. Gets input vertex data, writes out processed vertex data
PA - primitive assembly. Reads verticies that make up a primitive
HS - hull shader. accepts patch primitives writes transformed points (tesselation bus)
TS - tessellator stage. Creates vertices and connectivity for lines or triangles
DS - domain shader. takes shaded control points and tessellated positions from TS and makes them verts again
GS - Geometry shader. inputs primitives then outputs different primitaves?
SO - stream out. writes the GS output to memory
RS - Rasterizer. Rasterises primitives
PS - pixel shader. Gets interpolated vertex data, outputs pixel colors
OM - output merger. Gets shaded pixels from PS, does alpha blending and writes to the backbuffer
CS - compute shader. In it's own pipeline

Differant Pipelines

1. VS -> PS
    your old regular pipeline

2. VS -> GS -> PS
    used for geometry shading

3. VS -> HS -> TS -> DS -> PS
                or
   VS -> HS -> TS -> DS -> GS -> PS

   Tessellation (new in D3D11)

4.
    VS→SO,
    VS→GS→SO,
    VS→HS→TS→DS→GS→SO

    stream out(with and without tesselation)

5.
    CS: compute new in D3D11


